#Notes on opencv
- Read images:
	img = cv2.imread('img.png') #returns np array (matrix) of pixel values
	img = numpy.asarray(img).reshape(-1) #stretches array into vector
	imwrite('newimg.png', img) #writes image into file

- SVM:
	# cv2.SVM uses numpy.array(dtype=numpy.float32)
	# cv2.SVM::train(training, responses)
		* training (X): M x N numpy array, M training examples, N features each
		* responses (Y): size M numpy array, M classifications (corresponding with training examples)

	img = np.array(img, dtype=numpy.float32) #cast to float type for SVM
	# Put a bunch of 1D img arrays into a 2D numpy array X
	y = (numpy array of classifications)
	svm = cv2.SVM() #constructor
	svm.train(X, y) #trains the SVM
	
	results = svm.predict_all(X_test) # takes test data points

